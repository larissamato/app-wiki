services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
        - db
        - redis
        - soketi
    env_file:
        - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/usr/src/app

  queue-default:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    command: "php artisan queue:work redis -n -vvv"
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
        - app

  scheduler:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    command: "php artisan schedule:work -n -vvv"
    depends_on:
      - app
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/usr/src/app

  db:
    image: mariadb:10.11
    command: [ "--max_connections=1000" ]
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_AUTO_UPGRADE: 1
    healthcheck:
      interval: 30s
      retries: 3
      test:
          - CMD
          - /usr/local/bin/healthcheck.sh
          - --su=mysql
          - --connect
          - --innodb_initialized
      timeout: 30s
    volumes:
      - db-data:/var/lib/mysql

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "${APP_PORT:-4501}:80"
    volumes:
      - ./:/usr/src/app:ro
      - ./nginx-app.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 20s
      timeout: 30s
      test:
          - CMD
          - curl
          - --fail
          - http://localhost/version

  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: unless-stopped
    ulimits:
      memlock: -1
    command: >
        --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - redis-data:/data

  soketi:
    image: 'quay.io/soketi/soketi:1.4-16-debian'
    restart: unless-stopped
    ports:
      - '${SOKETI_PORT:-6001}:6001'
      - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
    environment:
      - SOKETI_DEBUG=${DEBUG:-1}
      - SOKETI_DEFAULT_APP_ID=${PUSHER_APP_ID:-app-id}
      - SOKETI_DEFAULT_APP_KEY=${PUSHER_APP_KEY:-app-key}
      - SOKETI_DEFAULT_APP_SECRET=${PUSHER_APP_SECRET:-app-secret}
      - PUSHER_HOST=${PUSHER_HOST:-127.0.0.1}
      - PUSHER_PORT= ${PUSHER_PORT:-6001}
      - PUSHER_SCHEME=${PUSHER_SCHEME:-http} # or https
      - METRICS_SERVER_PORT=${METRICS_SERVER_PORT:-9601}
      - DEFAULT_APP_ENABLE_CLIENT_MESSAGES=${DEFAULT_APP_ENABLE_CLIENT_MESSAGES:-false}

  mail:
    image: axllent/mailpit:v1.23
    ports:
      - 8025:8025
      - 1025:1025

  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /tmp
    restart: unless-stopped
  minio-create-buckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_started
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/ticket-attachments;
      /usr/bin/mc mb myminio/contracts;
      /usr/bin/mc mb myminio/proposals;
      /usr/bin/mc mb myminio/discovery;
      /usr/bin/mc mb myminio/kb-articles;
      exit 0;
      "

volumes:
  db-data:
  redis-data:
